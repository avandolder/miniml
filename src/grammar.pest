WHITESPACE = _{ " " | "\t" | NEWLINE }
COMMENT = _{ "#" ~ (!NEWLINE ~ ANY) ~ NEWLINE }

Program = { SOI ~ Term ~ EOI }
Term = { Apply | ValTerm }
Apply = { ValTerm{2,} }
ValTerm = _{
    Let
    | Match
    | If
    | Lambda
    | True
    | False
    | Id
    | Int
    | Tuple
    | Record
    | "(" ~ Term ~ ")"
}
Lambda = { "fn" ~ Pattern ~ (":" ~ Type)? ~ "=>" ~ Term }
Let = { "let" ~ Pattern ~ (":" ~ Type)? ~ "=" ~ Term ~ "in" ~ Term }
Tuple = { Unit | "(" ~ (Term ~ ",")+ ~ Term? ~ ")" }
Record = { "{" ~ RecordField ~ ("," ~ RecordField)* ~ ","? ~ "}" }
RecordField = { Id ~ ":" ~ Term | Id }
If = { "if" ~ Term ~ "then" ~ Term ~ "else" ~ Term}

Type = { Arrow | NonArrow }
NonArrow = _{ BoolType | IntType | TupleType | RecordType | "(" ~ Type ~ ")" }
Arrow = { NonArrow ~ "->" ~ Type }
TupleType = { Unit | "(" ~ (Type ~ ",")+ ~ Type? ~ ")" }
RecordType = { "{" ~ RecordTypeField ~ ("," ~ RecordTypeField)* ~ ","? ~ "}" }
RecordTypeField = { Id ~ ":" ~ Type }

Match = { "match" ~ Term ~ "with" ~ "|"? ~ Arm ~ ("|" ~ Arm)* }
Arm = { Pattern ~ "=>" ~ Term }
Pattern = { Any | True | False | Id | Int | TuplePattern | RecordPattern }
RecordPattern = { "{" ~ RecordPatternField ~ ("," ~ RecordPatternField)* ~ ","? ~ "}" }
RecordPatternField = { Id | Id ~ ":" ~ Pattern }
TuplePattern = { Unit | "(" ~ (Pattern ~ ",")+ ~ Pattern? ~ ")" }

Id = @{
    !("let" | "in" | "fn" | "true" | "false"
      | "match" | "with" | "if" | "then" | "else") ~
    ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_" | "'")*
}
Any = @{ "_" }
Unit = _{ "(" ~ ")" }
True = @{ "true" }
False = @{ "false" }
BoolType = @{ "Bool" }
IntType = @{ "Int" }
Int = @{ "-"? ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*) }
